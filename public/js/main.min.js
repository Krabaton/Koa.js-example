var loginModule = (function() {
  var t = function() {
      $('#login').on('submit', e)
    },
    e = function(t) {
      console.log('Работаем с формой'), t.preventDefault()
      var n = $(this),
        e = o(n, '/login')
      e &&
        e.done(function(t) {
          var e = t.mes
          'OK' === t.status
            ? (n.trigger('reset'),
              n
                .find('.success-mes')
                .text(e)
                .show())
            : n
                .find('.error-mes')
                .text(e)
                .show()
        })
    },
    o = function(e, t) {
      if (!validation.validateForm(e)) return !1
      var n = e.serialize()
      return $.ajax({ type: 'POST', url: t, dataType: 'JSON', data: n }).fail(
        function(t) {
          console.log('Проблемы в PHP'),
            e
              .find('.error-mes')
              .text('На сервере произошла ошибка')
              .show()
        },
      )
    }
  return {
    init: function() {
      console.log('Инициализация модуля loginModule'), t()
    },
  }
})()
$('#login').length && loginModule.init()
var addProject = (function() {
  var t = function() {
      $('#add-new-item').on('click', e),
        $('#add-new-project').on('submit', _addProject)
    },
    e = function() {
      console.log('Вызов модального окна'),
        $('#new-progect-popup').bPopup({
          speed: 650,
          transition: 'slideDown',
          onClose: function() {
            this.find('.form').trigger('reset')
          },
        })
    }
  return (
    (_addProject = function(t) {
      console.log('Работаем с формой добавления проекта'), t.preventDefault()
      var n = $(this),
        e = _ajaxForm(this, '/my-work')
      e &&
        e.done(function(t) {
          var e = t.mes
          'OK' === t.status
            ? (n.trigger('reset'),
              n
                .find('.success-mes')
                .text(e)
                .show(),
              location.reload())
            : n
                .find('.error-mes')
                .text(e)
                .show()
        })
    }),
    (_ajaxForm = function(e, t) {
      if (!validation.validateForm($(e))) return !1
      var n = new FormData(e)
      return $.ajax({
        type: 'POST',
        url: t,
        data: n,
        contentType: !1,
        cache: !1,
        processData: !1,
      }).fail(function(t) {
        console.log('Проблемы в PHP'),
          e
            .find('.error-mes')
            .text('На сервере произошла ошибка')
            .show()
      })
    }),
    {
      init: function() {
        console.log('Инициализация модуля addProject'), t()
      },
    }
  )
})()
$('#add-new-project').length && addProject.init()
var validation = (function() {
  var t = function() {
      $('form').on('input', '.has-error', e),
        $('form').on('keydown', '.has-error', e),
        $('form').on('reset', n)
    },
    e = function() {
      console.log('Красная обводка у элементов форм удалена'),
        $(this).removeClass('has-error')
    },
    n = function(t) {
      console.log('Очищаем форму'),
        (t = $(this))
          .find('.input, .textarea, .fileupload')
          .trigger('hideTooltip'),
        t.find('.has-error').removeClass('has-error'),
        t
          .find('.error-mes, .success-mes')
          .text('')
          .hide()
    },
    r = function(t, e) {
      console.log('Создаем тултип'),
        (e =
          'right' === e
            ? { my: 'left center', at: 'right center' }
            : {
                my: 'right center',
                at: 'left center',
                adjust: { method: 'shift none' },
              }),
        t
          .qtip({
            content: {
              text: function() {
                return $(this).attr('qtip-content')
              },
            },
            show: { event: 'show' },
            hide: { event: 'keydown hideTooltip' },
            position: e,
            style: {
              classes: 'qtip-mystyle qtip-rounded',
              tip: { height: 10, width: 16 },
            },
          })
          .trigger('show')
    }
  return {
    init: function() {
      console.log('Инициализация модуля validation'), t()
    },
    validateForm: function(t) {
      console.log('Проверяем форму')
      var e = t
          .find('input, textarea')
          .not('input[type="hidden"], input[disabled]'),
        i = !0
      return (
        $.each(e, function(t, e) {
          var n = $(e),
            o = ((e = n.val()), n.attr('qtip-position'))
          0 === e.length && (n.addClass('has-error'), r(n, o), (i = !1))
        }),
        i
      )
    },
  }
})()
$('form').length && validation.init()
var contactMe = (function() {
  var t = function() {
      $('#contact-me').on('submit', e)
    },
    e = function(t) {
      console.log('Работаем с формой связи'), t.preventDefault()
      var n = $(this),
        e = o(n, '/contact-me')
      e &&
        e.done(function(t) {
          var e = t.mes
          'OK' === t.status
            ? (n.trigger('reset'),
              n
                .find('.success-mes')
                .text(e)
                .show())
            : n
                .find('.error-mes')
                .text(e)
                .show()
        })
    },
    o = function(e, t) {
      if (!validation.validateForm(e)) return !1
      var n = e.serialize()
      return $.ajax({ type: 'POST', url: t, dataType: 'JSON', data: n }).fail(
        function(t) {
          console.log(t.responseText),
            e
              .find('.error-mes')
              .text(JSON.parse(t.responseText).mes)
              .show()
        },
      )
    }
  return {
    init: function() {
      console.log('Инициализация модуля contactMe'), t()
    },
  }
})()
$('#contact-me').length && contactMe.init()
